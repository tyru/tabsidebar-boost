*tabsidebar-boost.txt* add extra features to Vim-TabSideBar

Author:
  tyru <tyru.exe@gmail.com>
Version: 1.0
License:
NEW BSD LICENSE {{{
  Copyright (c) 2018, tyru
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

      * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      * Neither the name of the tyru nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}}}

==============================================================================
CONTENTS								*tabsidebar-boost-contents*

Introduction					|tabsidebar-boost-introduction|
Interface							|tabsidebar-boost-interface|
  Keymappings					|tabsidebar-boost-keymappings|
  Variables						|tabsidebar-boost-variables|
  Functions						|tabsidebar-boost-keymappings|
TODO									|tabsidebar-boost-todo|
Changelog							|tabsidebar-boost-changelog|


==============================================================================
INTRODUCTION							*tabsidebar-boost-introduction* {{{

*tabsidebar-boost* adds extra features to Vim-TabSideBar.
(see https://rbtnn.github.io/vim/ for Vim-TabSideBar patch)
>
	if has('tabsidebar')
		" Jumps to a window quickly
		nmap <Space><Space>  <Plug>(tabsidebar-boost-jump)
		nmap <C-n>           <Plug>(tabsidebar-boost-next-window)
		nmap <C-p>           <Plug>(tabsidebar-boost-previous-window)

		" You can change tab page title
		nnoremap <Space>t    :<C-u>TabSideBarBoostSetTitle<Space><C-r>=get(t:, 'tabsidebar_boost_title', '')<CR>

		" Adjust columns of tabsidebar automatically
		let g:tabsidebar_boost#auto_adjust_tabsidebarcolumns = 1

		" Cool tabsidebar display
		let &g:tabsidebar = '%!tabsidebar_boost#tabsidebar(g:actual_curtabpage)'
	endif
<
}}}
==============================================================================
INTERFACE									*tabsidebar-boost-interface* {{{
------------------------------------------------------------------------------
KEYMAPPINGS									*tabsidebar-boost-keymappings* {{{

											*<Plug>(tabsidebar-boost-jump)*
(n) *<Plug>(tabsidebar-boost-jump)*
	This prompts window character id which was generated by |g:tabsidebar_boost#chars|,
	and if a user types the ID of a window, it jumps to the window.

	e.g. When window "a" exists, if you type "a", it jumps to window "a".

	IDs of windows are generated by |g:tabsidebar_boost#chars|.
	IDs are assigned across tab pages.
	If you have tab 1 and 2, and window 1 and 2 on each tab page:

	tab page number		window number	ID ~
	1					1				a
	1					2				s
	2					1				d
	2					2				f

	ID can be 2 or more characters. If |g:tabsidebar_boost#chars| is "abc",
	IDs are assigned like this:

	tab page number		window number	ID ~
	1					1				aa
	1					2				ab
	2					1				ac
	2					2				ba

	IDs of windows are visible only when |<Plug>(tabsidebar-boost-jump)|
	is firing.

									*<Plug>(tabsidebar-boost-next-window)*
(n) *<Plug>(tabsidebar-boost-next-window)*
	This jumps to the next window across tabpages.
	This mapping also supports |[count]|.

								*<Plug>(tabsidebar-boost-previous-window)*
(n) *<Plug>(tabsidebar-boost-previous-window)*
	This jumps to the previous window across tabpages.
	This mapping also supports |[count]|.

}}}
------------------------------------------------------------------------------
VARIABLES									*tabsidebar-boost-variables* {{{

							*g:tabsidebar_boost#chars*
g:tabsidebar_boost#chars
								(Default: "asdfghjklzxcvbnmqwertyuiop")
	Characters used by |<Plug>(tabsidebar-boost-jump)|.
	See |<Plug>(tabsidebar-boost-jump)| for the details.

							*g:tabsidebar_boost#auto_adjust_tabsidebarcolumns*
g:tabsidebar_boost#auto_adjust_tabsidebarcolumns
								(Default: 0)
	When this is non-zero value, adjust |'tabsidebarcolumns'| to fit to a max column of
	the tabsidebar line if tabsidebar was changed.

										*g:tabsidebar_boost#format_window*
g:tabsidebar_boost#format_window
								(Default: "tabsidebar_boost#format_window")
	The function name which returns a string that indicates
	window information.
	See |tabsidebar_boost#format_window()| for the parameters.

										*g:tabsidebar_boost#format_tabpage*
g:tabsidebar_boost#format_tabpage
								(Default: "tabsidebar_boost#format_tabpage")
	The function name which returns a string that indicates
	tabpage and its windows information.
	See |tabsidebar_boost#format_tabpage()| for the parameters.
	See |t:tabsidebar_boost_title| for tab page title.

							*t:tabsidebar_boost_title*
t:tabsidebar_boost_title
	The tab page title.
	If this variable does not exist or empty,
	The default tab title ("Tab #1" for tab 1) is used.

	NOTE: This string value is used only when
	|g:tabsidebar_boost#format_tabpage| variable specifies the default
	function |tabsidebar_boost#format_tabpage()|.

}}}
------------------------------------------------------------------------------
FUNCTIONS									*tabsidebar-boost-functions* {{{

										*tabsidebar_boost#tabsidebar()*
tabsidebar_boost#tabsidebar({tabnr})
	{tabnr} is a tab page number.
	This returns a string for |'tabsidebar'|. A user can use this like this: >

	let &g:tabsidebar = '%!tabsidebar_boost#tabsidebar(g:actual_curtabpage)'
<
										*tabsidebar_boost#get_max_column()*
tabsidebar_boost#get_max_column()
	This returns a max column number for |'tabsidebarcolumns'|.
	If you set non-zero to |g:tabsidebar_boost#auto_adjust_tabsidebarcolumns|,
	this function is used for the calculation.
	Or you can call this explicitly to update |'tabsidebarcolumns'|: >

	let &tabsidebarcolumns = tabsidebar_boost#get_max_column()
<
	But you can simply use |tabsidebar_boost#adjust_column()| function for the
	above case.

										*tabsidebar_boost#adjust_column()*
tabsidebar_boost#adjust_column()
	This updates |'tabsidebarcolumns'| value. This is registered and called when
	|g:tabsidebar_boost#auto_adjust_tabsidebarcolumns| is non-zero.
	Also you can call this explicitly.

										*tabsidebar_boost#format_window()*
tabsidebar_boost#format_window({window})
	This returns a string that indicates window information.
	{window} is a Dictionary like this:

	key			value ~
	id			a window ID number which is unique across tab pages
	char_id		a function which returns a string of window ID
	tabnr		a tab page number
	winnr		a window number
	bufnr		a buffer number

										*tabsidebar_boost#format_tabpage()*
tabsidebar_boost#format_tabpage({tabnr}, {winlines})
	{tabnr} is a tab page number.
	{winlines} is a List which has string elements returned by
	|tabsidebar_boost#format_window()|.
	This returns a string that indicates window information.
	If the string contains newline(s), it is displayed as two or more lines
	in tabsidebar.

										*tabsidebar_boost#set_tab_title()*
tabsidebar_boost#set_tab_title({title})
	The function version of |:TabSideBarBoostSetTitle|.

										*tabsidebar_boost#is_jumping()*
tabsidebar_boost#is_jumping()
	This returns non-zero while firing |tabsidebar_boost#jump()|.

										*tabsidebar_boost#jump()*
tabsidebar_boost#jump()
	The function version of |<Plug>(tabsidebar-boost-jump)|.

										*tabsidebar_boost#next_window()*
tabsidebar_boost#next_window()
	The function version of |<Plug>(tabsidebar-boost-next-window)|.

										*tabsidebar_boost#previous_window()*
tabsidebar_boost#previous_window()
	The function version of |<Plug>(tabsidebar-boost-previous-window)|.

}}}
------------------------------------------------------------------------------
COMMANDS									*tabsidebar-boost-commands* {{{

										*:TabSideBarBoostSetTitle*
:TabSideBarBoostSetTitle {title}
	This updates |t:tabsidebar_boost_title| and adjusts |'tabsidebarcolumns'|.
	See |tabsidebar-boost-introduction| for useful mapping to invoke this
	command quickly.

}}}
}}}
==============================================================================
TODO											*tabsidebar-boost-todo* {{{

See https://github.com/tyru/tabsidebar-boost.vim/issues

}}}
==============================================================================
CHANGELOG									*tabsidebar-boost-changelog* {{{

1.0:
- Initial upload.

}}}
==============================================================================
vim:tw=78:fo=tcq2mM:ts=4:ft=help:norl:noet:fdm=marker:fen
